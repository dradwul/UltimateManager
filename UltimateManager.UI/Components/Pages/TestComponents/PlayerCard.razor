@page "/playercard"
@using UltimateManager.Data.Repositories
@using UltimateManager.Domain.Models
@inject TeamRepository TeamRepository
@inject PlayerRepository PlayerRepository

<style>
    .player-card-container {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: 10px;
        user-select: none;
    }

    .player-card {
        position: relative;
        width: 170px;
        height: 190px;
        perspective: 1000px;
        margin: 10px;
    }

    .player-card-inner {
        position: absolute;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.8s;
        transform-style: preserve-3d;
    }

    .player-card:hover .player-card-inner {
        transform: rotateY(180deg);
    }

    .player-card-front, .player-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        border-radius: 5px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .player-card-front {
        background-color: #f8f8f8;
        color: black;
    }

    .player-card-back {
        background-color: #ddd;
        color: black;
        transform: rotateY(180deg);
    }

    .pcf-top {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        width: 100%;
    }

    .pcf-top-ovr {
        font-size: 1.5rem;
    }

    .pcf-top-name {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        color: #999;
    }

    .pcf-top-name-f {
        font-size: 1rem;
    }

    .pcf-top-name-l {
        font-size: 1.2rem;
        text-align: right;
        position: relative;
        top: -8px;
    }
</style>

<div class="player-card-container">
    @foreach (var player in allPlayers)
    {
        <div class="player-card">
            <div class="player-card-inner">
                <div class="player-card-front">
                    <div class="pcf-top">
                        <div class="pcf-top-ovr">
                            @player.Overall
                        </div>
                        <div class="pcf-top-name">
                            <span class="pcf-top-name-f">@player.FirstName</span>
                            <span class="pcf-top-name-l">@player.LastName</span>
                        </div>
                    </div>
                </div>
                <div class="player-card-back">
                    <span>TEAM: @player.Team?.Name</span>
                    <span>AGE: @PlayerRepository.CalculateAge(player)</span>
                    <span>POS: @PlayerRepository.PositionShortener(player)</span>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<Player> allPlayers = new();

    protected override async Task OnInitializedAsync()
    {
        allPlayers = await PlayerRepository.GetAllPlayersAsync();
    }
}
